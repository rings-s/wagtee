# Generated by Django 5.1.5 on 2025-08-03 17:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('business_owner', 'Business Owner'), ('admin', 'Admin'), ('super_admin', 'Super Admin')], default='business_owner', max_length=20)),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+966xxxxxxxxx'", regex='^\\+966[0-9]{9}$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('business_name', models.CharField(blank=True, max_length=255)),
                ('cr_number', models.CharField(blank=True, help_text='Commercial Registration Number', max_length=10, validators=[django.core.validators.RegexValidator(message='CR number must be 10 digits starting with 1-9', regex='^[1-9][0-9]{9}$')])),
                ('vat_number', models.CharField(blank=True, help_text='15-digit VAT number', max_length=15)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=100)),
                ('subscription_tier', models.CharField(blank=True, max_length=20, null=True)),
                ('subscription_active', models.BooleanField(default=False)),
                ('subscription_expires', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('barber', 'Barber'), ('salon', 'Hair Salon'), ('beauty_center', 'Beauty Center'), ('car_wash', 'Car Wash'), ('cleaning', 'Cleaning Center'), ('gym', 'Gym'), ('photographer', 'Photographer'), ('makeup_artist', 'Makeup Artist'), ('bazar', 'Bazar'), ('events', 'Events')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('description_ar', models.TextField(blank=True, help_text='Arabic description')),
                ('address', models.TextField()),
                ('address_ar', models.TextField(blank=True, help_text='Arabic address')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('working_hours', models.JSONField(default=dict)),
                ('images', models.JSONField(default=list)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('basic', 'Basic - 30 SAR'), ('standard', 'Standard - 45 SAR'), ('premium', 'Premium - 60 SAR')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('lemon_squeezy_subscription_id', models.CharField(blank=True, max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='accounts_us_phone_n_613c4a_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='accounts_us_role_1fa9a5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='accounts_us_is_veri_fa45d6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['subscription_active'], name='accounts_us_subscri_c44d57_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['service_type'], name='accounts_bu_service_a2510c_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['is_active'], name='accounts_bu_is_acti_febdd7_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['rating'], name='accounts_bu_rating_baefe0_idx'),
        ),
    ]
